<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Articles on Vanik Karslian</title><link>https://karslian.com/articles/</link><description>Recent content in Articles on Vanik Karslian</description><generator>Hugo -- gohugo.io</generator><language>EN</language><lastBuildDate>Fri, 07 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://karslian.com/articles/index.xml" rel="self" type="application/rss+xml"/><item><title>Manage your python-dependancies with Poetry</title><link>https://karslian.com/articles/2020-08-15-poetry/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://karslian.com/articles/2020-08-15-poetry/</guid><description>Another daily hassel for python developers is to have their packages under control. Python, unlike other programming languages lacks of solid package management tool. pip provides some basic functionality, but still does not have necessary version and dependency management capabilities, required for mission critical python projects. As a consequence, there are several issues that might occur in your production environment. In this article I will discuss the most critical issues and give some thoughts how they can be avoided using poetry.</description></item><item><title>Overview of the data architectures</title><link>https://karslian.com/articles/2022-10-07-data-architectures/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://karslian.com/articles/2022-10-07-data-architectures/</guid><description>The Data Еnignеering field is a relatively a new area of IT, which is actively developing within the last years.
The field is dynamically changing, and those changes also reflect in the emerging approaches in the architecture. In this article we will briefly cover some of the most popular DWH architectures.
Independent Data Mart Architecture In this architecture, the data marts are highly adjusted to the needs of the specific departments.</description></item><item><title>Resovle python installemnts hassle with Pyenv</title><link>https://karslian.com/articles/2020-08-07-pyenv/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://karslian.com/articles/2020-08-07-pyenv/</guid><description>In our daily work we usually deal with multiple python projects that we maintain. It&amp;rsquo;s usually the case that those projects have slightly different python versions. Some of the projects get the frequent updates, some of them might sit somewhere in your hard drive with old, but good python3.7 waiting for the developer to update the version.
The management of the python versions was always a hassle. Especially when it comes to the virtualenvs.</description></item><item><title>Tooling you should use for your python projects</title><link>https://karslian.com/articles/2020-08-02-python-project-setup/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://karslian.com/articles/2020-08-02-python-project-setup/</guid><description>In this article I am will share some basic tools I recommend to use with every python project.
Pyenv The first tool in my daily toolbox is pyenv. Pyenv allows to install and manage multiple python environments at the same time.
Key benefits: you can install any python version available in pypi at your machine time saving: you do not need to care about the installation process, pyevn will do everything for you manages virtualenvironments- it is a single tool to add manage both the python version as well as the virtualenvironments.</description></item><item><title>Travels in time with BigQuery</title><link>https://karslian.com/articles/2022-10-07-biq-query-history/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://karslian.com/articles/2022-10-07-biq-query-history/</guid><description>The travels in time are possible in BigQuery. Not many of the BigQuery users are aware of this feature, although it might be incredibly useful in a daily life of any data engineer. There are multiple occasions when you can leverage the benefits of using time travel. Imagine, you run a data pipeline that breaks the result table, or you did a mistake in your sql query that destroyed a table used by other team-mates.</description></item></channel></rss>